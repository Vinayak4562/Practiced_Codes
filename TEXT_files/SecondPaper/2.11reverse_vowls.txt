Write a python function with name reverse_vowel that takes one string as an argument and
reverse the order of vowels present in the string. The function should return the string having
reversed order of vowels. For example – If the input string which is given as argument is ‘Hello’
then the output string should be ‘Holle’. You need to reverse the vowel irrespective of lowercase or uppercase

Here is the implementation of the reverse_vowel function in Python that takes a string as an argument and returns the string with reversed order of vowels:

def reverse_vowel(s):
    vowels = set('aeiouAEIOU')
    s = list(s)
    i, j = 0, len(s) - 1
    while i < j:
        if s[i] in vowels and s[j] in vowels:
            s[i], s[j] = s[j], s[i]
            i += 1
            j -= 1
        elif s[i] in vowels:
            j -= 1
        else:
            i += 1
    return ''.join(s)


s = 'HelloeeOO'
reversed_vowels = reverse_vowel(s)
print(reversed_vowels)  # output: Holle

In this implementation, we first create a set of vowels (both lowercase and uppercase). We then convert the input string to a list of characters so that we can modify it in-place. We then use two pointers, i and j, which start from the beginning and the end of the string, respectively, and move towards each other. At each step, we check if the characters at positions i and j are vowels. If they are, we swap them and move both pointers towards the middle of the string. If one or both of the characters are not vowels, we move the corresponding pointer towards the middle of the string. Finally, we join the characters back into a string and return it.

Here's an example usage of the function:

s = 'Hello'
reversed_vowels = reverse_vowel(s)
print(reversed_vowels)  # output: Holle

Note that the function does not modify the input string itself, but instead returns a new string with the reversed vowels.